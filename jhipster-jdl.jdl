application {
    config {
        baseName panysoft
        applicationType monolith
        packageName co.edu.sena
        authenticationType jwt
        devDatabaseType mysql
        prodDatabaseType mysql
        cacheProvider no
        buildTool maven
        clientFramework angularX
        enableTranslation true
        nativeLanguage es
        languages [en, es]
        //websocket spring-websocket
        //testFrameworks [cucumber]
        //entitySuffix false
        jhiPrefix panysoft
        reactive false
        serverPort 8080
        searchEngine false
        clientTheme slate
        clientThemeVariant primary
    }
    entities *
  
}

enum StateDocument{
	ACTIVE(ACTIVO)
    INACTIVE(INACTIVO)
}

entity DocumentType{
    	documentName String required maxlength(30) unique
        initials String required maxlength( 10) unique
    	stateDocumentType StateDocument  required
    }
    
entity Person{
	name String required maxlength(50)
    email String required maxlength (50) unique
    adress String required maxlength(40)
    
    
}

entity Client{
	
}



entity Employee{
	
}
    
entity PurchaseReceipt{

	date ZonedDateTime  required
    totalSale Double required 
    
}

entity DetailSale{
	productAmount  Integer  required
}


entity Category{

	nameCategory String required maxlength(30) unique
    
}

entity MeasureUnit{
	nameUnit String maxlength(30) required  unique
}

entity Recip {
	nameRecip String  maxlength(30) required unique
    estimatedPricePreparation Double  required
   
}

entity Product{
	 
    productName String maxlength(50) required unique
    buyPrice Double  required 
    
}
entity Inventory{
	stocks Integer  required
    
}
entity Presentation{
	presentation String maxlength(30) required unique
    
    
}

enum StateOrder{
	DELIVERED("ENTREGADO")
    UNDELIVERED("NOENTREGADO")
}
entity OrderPlaced{
	
	orderPlacedState StateOrder required
}
entity DetailOrder{
			quantityOrdered Integer  required 
            date ZonedDateTime required 
            invoiceNumber String maxlength(30) required unique
            pricePayment Double  required
            
}

entity DetailAmountRecip{
    amountProduct Double required
}

entity Provider{

	email String maxlength(50) required
    adress String maxlength(50) required
    nit String maxlength(50) required unique 
    name String maxlength (50) required unique
    phone String maxlength (30) required unique
      
}



relationship OneToMany{
		DocumentType to Person{documentType(documentName) required}
        Person to Employee{person(name) required }
        Category to Product{category(nameCategory) required}
        MeasureUnit to Presentation{measureUnit(nameUnit) required}
        Product to DetailSale{product(productName) required }
        Presentation to DetailSale{presentation(presentation) required }
        Employee to PurchaseReceipt {employee required}
        DetailSale to PurchaseReceipt{DetailSale(productAmount) required}
        Client to PurchaseReceipt{client required}
        Person to Client{person(name) required}
        Provider to Product{provider(name) required}
        Provider to DetailOrder{provider(name) required}
        OrderPlaced to DetailOrder{orderPlaced(OrderPlacedState) required}
        Presentation to Product{presentation(presentation) required}
        Product to Inventory{product(productName) required}
        Product to DetailAmountRecip{product(productName) required}
        Product to DetailOrder{product(productName) required}
        Recip to DetailAmountRecip{recip(nameRecip) required}
    
}


relationship OneToOne{
	Employee{user(login) required} to User
}

dto * with mapstruct
service * with serviceImpl
paginate * with pagination

